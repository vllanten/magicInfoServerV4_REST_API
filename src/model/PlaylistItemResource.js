/**
 * MagicInfo Server V4 REST API
 * MagicInfo Server V4 REST API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MagicInfoServerV4RestApi) {
      root.MagicInfoServerV4RestApi = {};
    }
    root.MagicInfoServerV4RestApi.PlaylistItemResource = factory(root.MagicInfoServerV4RestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PlaylistItemResource model module.
   * @module model/PlaylistItemResource
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>PlaylistItemResource</code>.
   * @alias module:model/PlaylistItemResource
   * @class
   * @param contentId {String} 
   */
  var exports = function(contentId) {
    var _this = this;



    _this['contentId'] = contentId;

















  };

  /**
   * Constructs a <code>PlaylistItemResource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PlaylistItemResource} obj Optional instance to populate.
   * @return {module:model/PlaylistItemResource} The populated <code>PlaylistItemResource</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('contentDuration')) {
        obj['contentDuration'] = ApiClient.convertToType(data['contentDuration'], 'Number');
      }
      if (data.hasOwnProperty('contentDurationMilli')) {
        obj['contentDurationMilli'] = ApiClient.convertToType(data['contentDurationMilli'], 'String');
      }
      if (data.hasOwnProperty('contentId')) {
        obj['contentId'] = ApiClient.convertToType(data['contentId'], 'String');
      }
      if (data.hasOwnProperty('contentName')) {
        obj['contentName'] = ApiClient.convertToType(data['contentName'], 'String');
      }
      if (data.hasOwnProperty('contentOrder')) {
        obj['contentOrder'] = ApiClient.convertToType(data['contentOrder'], 'Number');
      }
      if (data.hasOwnProperty('expiredDate')) {
        obj['expiredDate'] = ApiClient.convertToType(data['expiredDate'], 'String');
      }
      if (data.hasOwnProperty('hasDefaultPlayTime')) {
        obj['hasDefaultPlayTime'] = ApiClient.convertToType(data['hasDefaultPlayTime'], 'Boolean');
      }
      if (data.hasOwnProperty('mediaType')) {
        obj['mediaType'] = ApiClient.convertToType(data['mediaType'], 'String');
      }
      if (data.hasOwnProperty('playTime')) {
        obj['playTime'] = ApiClient.convertToType(data['playTime'], 'String');
      }
      if (data.hasOwnProperty('playlistId')) {
        obj['playlistId'] = ApiClient.convertToType(data['playlistId'], 'String');
      }
      if (data.hasOwnProperty('resolution')) {
        obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
      }
      if (data.hasOwnProperty('startDate')) {
        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
      }
      if (data.hasOwnProperty('subPlaylist')) {
        obj['subPlaylist'] = ApiClient.convertToType(data['subPlaylist'], 'Boolean');
      }
      if (data.hasOwnProperty('tagList')) {
        obj['tagList'] = ApiClient.convertToType(data['tagList'], 'String');
      }
      if (data.hasOwnProperty('tagMatchType')) {
        obj['tagMatchType'] = ApiClient.convertToType(data['tagMatchType'], 'String');
      }
      if (data.hasOwnProperty('tagValue')) {
        obj['tagValue'] = ApiClient.convertToType(data['tagValue'], 'String');
      }
      if (data.hasOwnProperty('thumbFileId')) {
        obj['thumbFileId'] = ApiClient.convertToType(data['thumbFileId'], 'String');
      }
      if (data.hasOwnProperty('thumbFileName')) {
        obj['thumbFileName'] = ApiClient.convertToType(data['thumbFileName'], 'String');
      }
      if (data.hasOwnProperty('thumbFilePath')) {
        obj['thumbFilePath'] = ApiClient.convertToType(data['thumbFilePath'], 'String');
      }
      if (data.hasOwnProperty('versionId')) {
        obj['versionId'] = ApiClient.convertToType(data['versionId'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} contentDuration
   */
  exports.prototype['contentDuration'] = undefined;
  /**
   * @member {String} contentDurationMilli
   */
  exports.prototype['contentDurationMilli'] = undefined;
  /**
   * @member {String} contentId
   */
  exports.prototype['contentId'] = undefined;
  /**
   * @member {String} contentName
   */
  exports.prototype['contentName'] = undefined;
  /**
   * @member {Number} contentOrder
   */
  exports.prototype['contentOrder'] = undefined;
  /**
   * @member {String} expiredDate
   */
  exports.prototype['expiredDate'] = undefined;
  /**
   * @member {Boolean} hasDefaultPlayTime
   */
  exports.prototype['hasDefaultPlayTime'] = undefined;
  /**
   * @member {String} mediaType
   */
  exports.prototype['mediaType'] = undefined;
  /**
   * @member {String} playTime
   */
  exports.prototype['playTime'] = undefined;
  /**
   * @member {String} playlistId
   */
  exports.prototype['playlistId'] = undefined;
  /**
   * @member {String} resolution
   */
  exports.prototype['resolution'] = undefined;
  /**
   * @member {String} startDate
   */
  exports.prototype['startDate'] = undefined;
  /**
   * @member {Boolean} subPlaylist
   */
  exports.prototype['subPlaylist'] = undefined;
  /**
   * @member {String} tagList
   */
  exports.prototype['tagList'] = undefined;
  /**
   * @member {String} tagMatchType
   */
  exports.prototype['tagMatchType'] = undefined;
  /**
   * @member {String} tagValue
   */
  exports.prototype['tagValue'] = undefined;
  /**
   * @member {String} thumbFileId
   */
  exports.prototype['thumbFileId'] = undefined;
  /**
   * @member {String} thumbFileName
   */
  exports.prototype['thumbFileName'] = undefined;
  /**
   * @member {String} thumbFilePath
   */
  exports.prototype['thumbFilePath'] = undefined;
  /**
   * @member {Number} versionId
   */
  exports.prototype['versionId'] = undefined;



  return exports;
}));


