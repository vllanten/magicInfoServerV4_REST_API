/**
 * MagicInfo Server V4.1 REST API
 * MagicInfo Server V4.1 REST API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeviceTimeClockConf', 'model/DeviceTimeHolidayResource', 'model/DeviceTimeTimerConf', 'model/HashMapstringobject', 'model/Timestamp'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DeviceTimeClockConf'), require('./DeviceTimeHolidayResource'), require('./DeviceTimeTimerConf'), require('./HashMapstringobject'), require('./Timestamp'));
  } else {
    // Browser globals (root is window)
    if (!root.MagicInfoServerV41RestApi) {
      root.MagicInfoServerV41RestApi = {};
    }
    root.MagicInfoServerV41RestApi.DeviceTimeconfResource = factory(root.MagicInfoServerV41RestApi.ApiClient, root.MagicInfoServerV41RestApi.DeviceTimeClockConf, root.MagicInfoServerV41RestApi.DeviceTimeHolidayResource, root.MagicInfoServerV41RestApi.DeviceTimeTimerConf, root.MagicInfoServerV41RestApi.HashMapstringobject, root.MagicInfoServerV41RestApi.Timestamp);
  }
}(this, function(ApiClient, DeviceTimeClockConf, DeviceTimeHolidayResource, DeviceTimeTimerConf, HashMapstringobject, Timestamp) {
  'use strict';




  /**
   * The DeviceTimeconfResource model module.
   * @module model/DeviceTimeconfResource
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>DeviceTimeconfResource</code>.
   * @alias module:model/DeviceTimeconfResource
   * @class
   */
  var exports = function() {
    var _this = this;



















  };

  /**
   * Constructs a <code>DeviceTimeconfResource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceTimeconfResource} obj Optional instance to populate.
   * @return {module:model/DeviceTimeconfResource} The populated <code>DeviceTimeconfResource</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('deviceTimeHolidayList')) {
        obj['deviceTimeHolidayList'] = ApiClient.convertToType(data['deviceTimeHolidayList'], [DeviceTimeHolidayResource]);
      }
      if (data.hasOwnProperty('holidayCnt')) {
        obj['holidayCnt'] = ApiClient.convertToType(data['holidayCnt'], 'Number');
      }
      if (data.hasOwnProperty('inputSourceList')) {
        obj['inputSourceList'] = ApiClient.convertToType(data['inputSourceList'], [HashMapstringobject]);
      }
      if (data.hasOwnProperty('mdcUpdateTime')) {
        obj['mdcUpdateTime'] = Timestamp.constructFromObject(data['mdcUpdateTime']);
      }
      if (data.hasOwnProperty('separatableDevice')) {
        obj['separatableDevice'] = ApiClient.convertToType(data['separatableDevice'], 'Boolean');
      }
      if (data.hasOwnProperty('timeClockConf')) {
        obj['timeClockConf'] = DeviceTimeClockConf.constructFromObject(data['timeClockConf']);
      }
      if (data.hasOwnProperty('timeCurrentTime')) {
        obj['timeCurrentTime'] = ApiClient.convertToType(data['timeCurrentTime'], 'String');
      }
      if (data.hasOwnProperty('timerClock')) {
        obj['timerClock'] = ApiClient.convertToType(data['timerClock'], 'String');
      }
      if (data.hasOwnProperty('timerConfTimer1')) {
        obj['timerConfTimer1'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer1']);
      }
      if (data.hasOwnProperty('timerConfTimer2')) {
        obj['timerConfTimer2'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer2']);
      }
      if (data.hasOwnProperty('timerConfTimer3')) {
        obj['timerConfTimer3'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer3']);
      }
      if (data.hasOwnProperty('timerConfTimer4')) {
        obj['timerConfTimer4'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer4']);
      }
      if (data.hasOwnProperty('timerConfTimer5')) {
        obj['timerConfTimer5'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer5']);
      }
      if (data.hasOwnProperty('timerConfTimer6')) {
        obj['timerConfTimer6'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer6']);
      }
      if (data.hasOwnProperty('timerConfTimer7')) {
        obj['timerConfTimer7'] = DeviceTimeTimerConf.constructFromObject(data['timerConfTimer7']);
      }
      if (data.hasOwnProperty('timerCount')) {
        obj['timerCount'] = ApiClient.convertToType(data['timerCount'], 'Number');
      }
      if (data.hasOwnProperty('timerHoliday')) {
        obj['timerHoliday'] = ApiClient.convertToType(data['timerHoliday'], 'String');
      }
      if (data.hasOwnProperty('timer_holiday')) {
        obj['timer_holiday'] = ApiClient.convertToType(data['timer_holiday'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/DeviceTimeHolidayResource>} deviceTimeHolidayList
   */
  exports.prototype['deviceTimeHolidayList'] = undefined;
  /**
   * @member {Number} holidayCnt
   */
  exports.prototype['holidayCnt'] = undefined;
  /**
   * @member {Array.<module:model/HashMapstringobject>} inputSourceList
   */
  exports.prototype['inputSourceList'] = undefined;
  /**
   * @member {module:model/Timestamp} mdcUpdateTime
   */
  exports.prototype['mdcUpdateTime'] = undefined;
  /**
   * @member {Boolean} separatableDevice
   */
  exports.prototype['separatableDevice'] = undefined;
  /**
   * @member {module:model/DeviceTimeClockConf} timeClockConf
   */
  exports.prototype['timeClockConf'] = undefined;
  /**
   * @member {String} timeCurrentTime
   */
  exports.prototype['timeCurrentTime'] = undefined;
  /**
   * @member {String} timerClock
   */
  exports.prototype['timerClock'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer1
   */
  exports.prototype['timerConfTimer1'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer2
   */
  exports.prototype['timerConfTimer2'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer3
   */
  exports.prototype['timerConfTimer3'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer4
   */
  exports.prototype['timerConfTimer4'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer5
   */
  exports.prototype['timerConfTimer5'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer6
   */
  exports.prototype['timerConfTimer6'] = undefined;
  /**
   * @member {module:model/DeviceTimeTimerConf} timerConfTimer7
   */
  exports.prototype['timerConfTimer7'] = undefined;
  /**
   * @member {Number} timerCount
   */
  exports.prototype['timerCount'] = undefined;
  /**
   * @member {String} timerHoliday
   */
  exports.prototype['timerHoliday'] = undefined;
  /**
   * @member {String} timer_holiday
   */
  exports.prototype['timer_holiday'] = undefined;



  return exports;
}));


