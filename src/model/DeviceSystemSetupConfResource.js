/**
 * MagicInfo Server V4 REST API
 * MagicInfo Server V4 REST API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeviceDownloadServerResource', 'model/HashMapstringobject', 'model/Map'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DeviceDownloadServerResource'), require('./HashMapstringobject'), require('./Map'));
  } else {
    // Browser globals (root is window)
    if (!root.MagicInfoServerV4RestApi) {
      root.MagicInfoServerV4RestApi = {};
    }
    root.MagicInfoServerV4RestApi.DeviceSystemSetupConfResource = factory(root.MagicInfoServerV4RestApi.ApiClient, root.MagicInfoServerV4RestApi.DeviceDownloadServerResource, root.MagicInfoServerV4RestApi.HashMapstringobject, root.MagicInfoServerV4RestApi.Map);
  }
}(this, function(ApiClient, DeviceDownloadServerResource, HashMapstringobject, Map) {
  'use strict';




  /**
   * The DeviceSystemSetupConfResource model module.
   * @module model/DeviceSystemSetupConfResource
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>DeviceSystemSetupConfResource</code>.
   * @alias module:model/DeviceSystemSetupConfResource
   * @class
   */
  var exports = function() {
    var _this = this;

























































  };

  /**
   * Constructs a <code>DeviceSystemSetupConfResource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceSystemSetupConfResource} obj Optional instance to populate.
   * @return {module:model/DeviceSystemSetupConfResource} The populated <code>DeviceSystemSetupConfResource</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('amsPlayMode')) {
        obj['amsPlayMode'] = ApiClient.convertToType(data['amsPlayMode'], 'String');
      }
      if (data.hasOwnProperty('autoComputerNameSet')) {
        obj['autoComputerNameSet'] = ApiClient.convertToType(data['autoComputerNameSet'], 'Boolean');
      }
      if (data.hasOwnProperty('autoIpSet')) {
        obj['autoIpSet'] = ApiClient.convertToType(data['autoIpSet'], 'Boolean');
      }
      if (data.hasOwnProperty('bandwidth')) {
        obj['bandwidth'] = ApiClient.convertToType(data['bandwidth'], 'Number');
      }
      if (data.hasOwnProperty('bgColor')) {
        obj['bgColor'] = ApiClient.convertToType(data['bgColor'], 'String');
      }
      if (data.hasOwnProperty('computerName')) {
        obj['computerName'] = ApiClient.convertToType(data['computerName'], 'String');
      }
      if (data.hasOwnProperty('connectionLimitTime')) {
        obj['connectionLimitTime'] = ApiClient.convertToType(data['connectionLimitTime'], 'Number');
      }
      if (data.hasOwnProperty('contentMnt')) {
        obj['contentMnt'] = ApiClient.convertToType(data['contentMnt'], 'String');
      }
      if (data.hasOwnProperty('contentReadyInterval')) {
        obj['contentReadyInterval'] = ApiClient.convertToType(data['contentReadyInterval'], 'Number');
      }
      if (data.hasOwnProperty('contentsDownloadMode')) {
        obj['contentsDownloadMode'] = ApiClient.convertToType(data['contentsDownloadMode'], 'Number');
      }
      if (data.hasOwnProperty('contentsProgressEnable')) {
        obj['contentsProgressEnable'] = ApiClient.convertToType(data['contentsProgressEnable'], 'Boolean');
      }
      if (data.hasOwnProperty('contentsProgressInterval')) {
        obj['contentsProgressInterval'] = ApiClient.convertToType(data['contentsProgressInterval'], 'Number');
      }
      if (data.hasOwnProperty('contentsProgressUnit')) {
        obj['contentsProgressUnit'] = ApiClient.convertToType(data['contentsProgressUnit'], 'String');
      }
      if (data.hasOwnProperty('dayLightSaving')) {
        obj['dayLightSaving'] = ApiClient.convertToType(data['dayLightSaving'], 'Boolean');
      }
      if (data.hasOwnProperty('dayLightSavingManual')) {
        obj['dayLightSavingManual'] = ApiClient.convertToType(data['dayLightSavingManual'], 'String');
      }
      if (data.hasOwnProperty('downloadServer')) {
        obj['downloadServer'] = ApiClient.convertToType(data['downloadServer'], [DeviceDownloadServerResource]);
      }
      if (data.hasOwnProperty('dstEndDay')) {
        obj['dstEndDay'] = ApiClient.convertToType(data['dstEndDay'], 'String');
      }
      if (data.hasOwnProperty('dstEndMonth')) {
        obj['dstEndMonth'] = ApiClient.convertToType(data['dstEndMonth'], 'String');
      }
      if (data.hasOwnProperty('dstEndTime')) {
        obj['dstEndTime'] = ApiClient.convertToType(data['dstEndTime'], 'String');
      }
      if (data.hasOwnProperty('dstEndWeek')) {
        obj['dstEndWeek'] = ApiClient.convertToType(data['dstEndWeek'], 'String');
      }
      if (data.hasOwnProperty('dstManualChanged')) {
        obj['dstManualChanged'] = ApiClient.convertToType(data['dstManualChanged'], 'Boolean');
      }
      if (data.hasOwnProperty('dstStartDay')) {
        obj['dstStartDay'] = ApiClient.convertToType(data['dstStartDay'], 'String');
      }
      if (data.hasOwnProperty('dstStartMonth')) {
        obj['dstStartMonth'] = ApiClient.convertToType(data['dstStartMonth'], 'String');
      }
      if (data.hasOwnProperty('dstStartTime')) {
        obj['dstStartTime'] = ApiClient.convertToType(data['dstStartTime'], 'String');
      }
      if (data.hasOwnProperty('dstStartWeek')) {
        obj['dstStartWeek'] = ApiClient.convertToType(data['dstStartWeek'], 'String');
      }
      if (data.hasOwnProperty('dstTimeDifference')) {
        obj['dstTimeDifference'] = ApiClient.convertToType(data['dstTimeDifference'], 'String');
      }
      if (data.hasOwnProperty('filedataDelSize')) {
        obj['filedataDelSize'] = ApiClient.convertToType(data['filedataDelSize'], 'Number');
      }
      if (data.hasOwnProperty('ftpConnectMode')) {
        obj['ftpConnectMode'] = ApiClient.convertToType(data['ftpConnectMode'], 'String');
      }
      if (data.hasOwnProperty('ftpPort')) {
        obj['ftpPort'] = ApiClient.convertToType(data['ftpPort'], 'Number');
      }
      if (data.hasOwnProperty('logMnt')) {
        obj['logMnt'] = ApiClient.convertToType(data['logMnt'], 'String');
      }
      if (data.hasOwnProperty('magicinfoServerUrl')) {
        obj['magicinfoServerUrl'] = ApiClient.convertToType(data['magicinfoServerUrl'], 'String');
      }
      if (data.hasOwnProperty('mntFolderPath')) {
        obj['mntFolderPath'] = ApiClient.convertToType(data['mntFolderPath'], 'String');
      }
      if (data.hasOwnProperty('monitoringInterval')) {
        obj['monitoringInterval'] = ApiClient.convertToType(data['monitoringInterval'], 'Number');
      }
      if (data.hasOwnProperty('onlyDnServer')) {
        obj['onlyDnServer'] = ApiClient.convertToType(data['onlyDnServer'], 'Boolean');
      }
      if (data.hasOwnProperty('playMode')) {
        obj['playMode'] = ApiClient.convertToType(data['playMode'], 'Number');
      }
      if (data.hasOwnProperty('playerResolution')) {
        obj['playerResolution'] = ApiClient.convertToType(data['playerResolution'], 'String');
      }
      if (data.hasOwnProperty('playerStartTimeout')) {
        obj['playerStartTimeout'] = ApiClient.convertToType(data['playerStartTimeout'], 'Number');
      }
      if (data.hasOwnProperty('proofOfPlayMnt')) {
        obj['proofOfPlayMnt'] = ApiClient.convertToType(data['proofOfPlayMnt'], 'String');
      }
      if (data.hasOwnProperty('proxyException')) {
        obj['proxyException'] = ApiClient.convertToType(data['proxyException'], 'String');
      }
      if (data.hasOwnProperty('proxySetting')) {
        obj['proxySetting'] = ApiClient.convertToType(data['proxySetting'], 'String');
      }
      if (data.hasOwnProperty('repositoryPath')) {
        obj['repositoryPath'] = ApiClient.convertToType(data['repositoryPath'], 'String');
      }
      if (data.hasOwnProperty('resetPassword')) {
        obj['resetPassword'] = ApiClient.convertToType(data['resetPassword'], 'Number');
      }
      if (data.hasOwnProperty('screenCaptureInterval')) {
        obj['screenCaptureInterval'] = ApiClient.convertToType(data['screenCaptureInterval'], 'Number');
      }
      if (data.hasOwnProperty('screenRotation')) {
        obj['screenRotation'] = ApiClient.convertToType(data['screenRotation'], 'Number');
      }
      if (data.hasOwnProperty('statisticsFileRefresh')) {
        obj['statisticsFileRefresh'] = ApiClient.convertToType(data['statisticsFileRefresh'], 'String');
      }
      if (data.hasOwnProperty('switchTime')) {
        obj['switchTime'] = ApiClient.convertToType(data['switchTime'], 'String');
      }
      if (data.hasOwnProperty('systemRestartInterval')) {
        obj['systemRestartInterval'] = ApiClient.convertToType(data['systemRestartInterval'], 'String');
      }
      if (data.hasOwnProperty('tagIdList')) {
        obj['tagIdList'] = ApiClient.convertToType(data['tagIdList'], 'String');
      }
      if (data.hasOwnProperty('tagList')) {
        obj['tagList'] = ApiClient.convertToType(data['tagList'], [Map]);
      }
      if (data.hasOwnProperty('timeZoneIndex')) {
        obj['timeZoneIndex'] = ApiClient.convertToType(data['timeZoneIndex'], 'String');
      }
      if (data.hasOwnProperty('timeZoneList')) {
        obj['timeZoneList'] = ApiClient.convertToType(data['timeZoneList'], [HashMapstringobject]);
      }
      if (data.hasOwnProperty('triggerInterval')) {
        obj['triggerInterval'] = ApiClient.convertToType(data['triggerInterval'], 'Number');
      }
      if (data.hasOwnProperty('tunnelingServer')) {
        obj['tunnelingServer'] = ApiClient.convertToType(data['tunnelingServer'], 'String');
      }
      if (data.hasOwnProperty('urlLauncherAddress')) {
        obj['urlLauncherAddress'] = ApiClient.convertToType(data['urlLauncherAddress'], 'String');
      }
      if (data.hasOwnProperty('urlLauncherTimeout')) {
        obj['urlLauncherTimeout'] = ApiClient.convertToType(data['urlLauncherTimeout'], 'String');
      }
      if (data.hasOwnProperty('useMpplayer')) {
        obj['useMpplayer'] = ApiClient.convertToType(data['useMpplayer'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} amsPlayMode
   */
  exports.prototype['amsPlayMode'] = undefined;
  /**
   * @member {Boolean} autoComputerNameSet
   */
  exports.prototype['autoComputerNameSet'] = undefined;
  /**
   * @member {Boolean} autoIpSet
   */
  exports.prototype['autoIpSet'] = undefined;
  /**
   * @member {Number} bandwidth
   */
  exports.prototype['bandwidth'] = undefined;
  /**
   * @member {String} bgColor
   */
  exports.prototype['bgColor'] = undefined;
  /**
   * @member {String} computerName
   */
  exports.prototype['computerName'] = undefined;
  /**
   * @member {Number} connectionLimitTime
   */
  exports.prototype['connectionLimitTime'] = undefined;
  /**
   * @member {String} contentMnt
   */
  exports.prototype['contentMnt'] = undefined;
  /**
   * @member {Number} contentReadyInterval
   */
  exports.prototype['contentReadyInterval'] = undefined;
  /**
   * @member {Number} contentsDownloadMode
   */
  exports.prototype['contentsDownloadMode'] = undefined;
  /**
   * @member {Boolean} contentsProgressEnable
   */
  exports.prototype['contentsProgressEnable'] = undefined;
  /**
   * @member {Number} contentsProgressInterval
   */
  exports.prototype['contentsProgressInterval'] = undefined;
  /**
   * @member {String} contentsProgressUnit
   */
  exports.prototype['contentsProgressUnit'] = undefined;
  /**
   * @member {Boolean} dayLightSaving
   */
  exports.prototype['dayLightSaving'] = undefined;
  /**
   * @member {String} dayLightSavingManual
   */
  exports.prototype['dayLightSavingManual'] = undefined;
  /**
   * @member {Array.<module:model/DeviceDownloadServerResource>} downloadServer
   */
  exports.prototype['downloadServer'] = undefined;
  /**
   * @member {String} dstEndDay
   */
  exports.prototype['dstEndDay'] = undefined;
  /**
   * @member {String} dstEndMonth
   */
  exports.prototype['dstEndMonth'] = undefined;
  /**
   * @member {String} dstEndTime
   */
  exports.prototype['dstEndTime'] = undefined;
  /**
   * @member {String} dstEndWeek
   */
  exports.prototype['dstEndWeek'] = undefined;
  /**
   * @member {Boolean} dstManualChanged
   */
  exports.prototype['dstManualChanged'] = undefined;
  /**
   * @member {String} dstStartDay
   */
  exports.prototype['dstStartDay'] = undefined;
  /**
   * @member {String} dstStartMonth
   */
  exports.prototype['dstStartMonth'] = undefined;
  /**
   * @member {String} dstStartTime
   */
  exports.prototype['dstStartTime'] = undefined;
  /**
   * @member {String} dstStartWeek
   */
  exports.prototype['dstStartWeek'] = undefined;
  /**
   * @member {String} dstTimeDifference
   */
  exports.prototype['dstTimeDifference'] = undefined;
  /**
   * @member {Number} filedataDelSize
   */
  exports.prototype['filedataDelSize'] = undefined;
  /**
   * @member {String} ftpConnectMode
   */
  exports.prototype['ftpConnectMode'] = undefined;
  /**
   * @member {Number} ftpPort
   */
  exports.prototype['ftpPort'] = undefined;
  /**
   * @member {String} logMnt
   */
  exports.prototype['logMnt'] = undefined;
  /**
   * @member {String} magicinfoServerUrl
   */
  exports.prototype['magicinfoServerUrl'] = undefined;
  /**
   * @member {String} mntFolderPath
   */
  exports.prototype['mntFolderPath'] = undefined;
  /**
   * @member {Number} monitoringInterval
   */
  exports.prototype['monitoringInterval'] = undefined;
  /**
   * @member {Boolean} onlyDnServer
   */
  exports.prototype['onlyDnServer'] = undefined;
  /**
   * @member {Number} playMode
   */
  exports.prototype['playMode'] = undefined;
  /**
   * @member {String} playerResolution
   */
  exports.prototype['playerResolution'] = undefined;
  /**
   * @member {Number} playerStartTimeout
   */
  exports.prototype['playerStartTimeout'] = undefined;
  /**
   * @member {String} proofOfPlayMnt
   */
  exports.prototype['proofOfPlayMnt'] = undefined;
  /**
   * @member {String} proxyException
   */
  exports.prototype['proxyException'] = undefined;
  /**
   * @member {String} proxySetting
   */
  exports.prototype['proxySetting'] = undefined;
  /**
   * @member {String} repositoryPath
   */
  exports.prototype['repositoryPath'] = undefined;
  /**
   * @member {Number} resetPassword
   */
  exports.prototype['resetPassword'] = undefined;
  /**
   * @member {Number} screenCaptureInterval
   */
  exports.prototype['screenCaptureInterval'] = undefined;
  /**
   * @member {Number} screenRotation
   */
  exports.prototype['screenRotation'] = undefined;
  /**
   * @member {String} statisticsFileRefresh
   */
  exports.prototype['statisticsFileRefresh'] = undefined;
  /**
   * @member {String} switchTime
   */
  exports.prototype['switchTime'] = undefined;
  /**
   * @member {String} systemRestartInterval
   */
  exports.prototype['systemRestartInterval'] = undefined;
  /**
   * @member {String} tagIdList
   */
  exports.prototype['tagIdList'] = undefined;
  /**
   * @member {Array.<module:model/Map>} tagList
   */
  exports.prototype['tagList'] = undefined;
  /**
   * @member {String} timeZoneIndex
   */
  exports.prototype['timeZoneIndex'] = undefined;
  /**
   * @member {Array.<module:model/HashMapstringobject>} timeZoneList
   */
  exports.prototype['timeZoneList'] = undefined;
  /**
   * @member {Number} triggerInterval
   */
  exports.prototype['triggerInterval'] = undefined;
  /**
   * @member {String} tunnelingServer
   */
  exports.prototype['tunnelingServer'] = undefined;
  /**
   * @member {String} urlLauncherAddress
   */
  exports.prototype['urlLauncherAddress'] = undefined;
  /**
   * @member {String} urlLauncherTimeout
   */
  exports.prototype['urlLauncherTimeout'] = undefined;
  /**
   * @member {Boolean} useMpplayer
   */
  exports.prototype['useMpplayer'] = undefined;



  return exports;
}));


