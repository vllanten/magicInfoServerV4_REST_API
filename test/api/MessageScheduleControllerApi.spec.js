/**
 * MagicInfo Server V4.1 REST API
 * MagicInfo Server V4.1 REST API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagicInfoServerV41RestApi);
  }
}(this, function(expect, MagicInfoServerV41RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagicInfoServerV41RestApi.MessageScheduleControllerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MessageScheduleControllerApi', function() {
    describe('copyMessageScheduleUsingPUT1', function() {
      it('should call copyMessageScheduleUsingPUT1 successfully', function(done) {
        //uncomment below and update the code to test copyMessageScheduleUsingPUT1
        //instance.copyMessageScheduleUsingPUT1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMessageScheduleUsingPOST', function() {
      it('should call createMessageScheduleUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createMessageScheduleUsingPOST
        //instance.createMessageScheduleUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMessageScheduleUsingDELETE1', function() {
      it('should call deleteMessageScheduleUsingDELETE1 successfully', function(done) {
        //uncomment below and update the code to test deleteMessageScheduleUsingDELETE1
        //instance.deleteMessageScheduleUsingDELETE1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployMessageScheduleUsingPUT', function() {
      it('should call deployMessageScheduleUsingPUT successfully', function(done) {
        //uncomment below and update the code to test deployMessageScheduleUsingPUT
        //instance.deployMessageScheduleUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editMessageScheduleUsingPUT1', function() {
      it('should call editMessageScheduleUsingPUT1 successfully', function(done) {
        //uncomment below and update the code to test editMessageScheduleUsingPUT1
        //instance.editMessageScheduleUsingPUT1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageInfoUsingGET1', function() {
      it('should call getMessageInfoUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getMessageInfoUsingGET1
        //instance.getMessageInfoUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllMessageScheduleUsingGET', function() {
      it('should call listAllMessageScheduleUsingGET successfully', function(done) {
        //uncomment below and update the code to test listAllMessageScheduleUsingGET
        //instance.listAllMessageScheduleUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMessageUsingPOST', function() {
      it('should call listMessageUsingPOST successfully', function(done) {
        //uncomment below and update the code to test listMessageUsingPOST
        //instance.listMessageUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
